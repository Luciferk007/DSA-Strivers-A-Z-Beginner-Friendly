#include <iostream>
#include<bits/stdc++.h>
using namespace std;

//Brute force Approach
void kadane_algo_brute(int arr[], int n)
{
  int max_sum=INT_MIN;
  for(int i=0; i<n; i++)
  {
    for(int j=i+1; j<n; j++)
    { 
      int sum=0; 
      for(int k=i; k<=j; k++)
      {
        sum += arr[k];
        cout<<"sum : "<<sum<<endl;
        max_sum = max(max_sum , sum);
        cout<<"MAX_SUM: "<<max_sum<<endl;
      }
    }
  }
}
//Opyimum Approach
void kadane_algo_optimum(int arr[], int n)
{
  int max_sum = INT_MIN;
  int sum =0;
  for(int i=0; i<n; i++)
  {
    sum += arr[i];
    if(sum > max_sum)
    {
      max_sum = sum;
    }
  }
  cout<<max_sum;
}

int main()
{
  int arr[] = {-1,2,-3,4,5};
  int n = sizeof(arr)/sizeof(arr[0]);
  kadane_algo_brute(arr,n);
  kadane_algo_optimum(arr,n);
}