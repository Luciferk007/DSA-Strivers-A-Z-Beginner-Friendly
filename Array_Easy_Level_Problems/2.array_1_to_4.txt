//Easy
#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;

void largest_element(int arr[], int n)
{ 
  int temp;
  int largest;
  for(int i=0; i<n-1; i++)
  {
    if(arr[i] > arr[i+1])
    {
      temp = arr[i];
      arr[i] = arr[i+1];
      arr[i+1] = temp;
    }
  }
  largest  = arr[n-1];
  cout<<largest<<endl;
}

void second_largest_element(int arr[], int n)
{
 int largest = 0;
 int second_largest;
 for(int i=0; i<n-1; i++)
 {
   if(arr[i+1] > arr[i])
   {
     second_largest = largest;
     largest = max(arr[i+1],largest);
   }
   else
   {
     second_largest = largest;
     largest = max(arr[i],largest);
   }
 }
 cout<<second_largest<<endl;
}

void second_smallest_element(int arr[], int n)
{
  int second_min;
  int minimum = INT_MAX;
  for(int i=0; i<n; i++)
  {
    if(arr[i]<minimum)
    {
      second_min = minimum;
      minimum = arr[i];
    }
    else if (arr[i] < second_min)
    {
      second_min = arr[i];
    }
  }
  cout<<second_min<<endl;
}

void remove_duplicate(vector<int>&vec)
{
  vector<int>result;
  unordered_set<int>s; // to track unique elements
  for(int i=0; i<vec.size(); i++)
  {
    if(s.count(vec[i]) == 0)
    {
      s.insert(vec[i]);  //if the elment is unique push it or skip it simple
      result.push_back(vec[i]);
    }
  }
  vec = result;
}


void print_vector(vector<int>&v)
{
  for(int i=0; i<v.size(); i++)
  {
    cout<<v[i]<<" ";
  }
}

void print_array(int arr[], int n)
{
  for(int i=0; i<n; i++)
  {
    cout<<arr[i]<<" ";
  }
}

int main()
{
  int arr[] = {5,8,9,1,2,7,8,4,3,14,5,2};
  int n = sizeof(arr)/sizeof(arr[0]);
  vector<int>vec = {1,1,3,3,4,5,6,6,6,6};
  print_array(arr,n);
  cout<<endl;
  largest_element(arr,n);
  second_largest_element(arr,n);
  second_smallest_element(arr,n);
  remove_duplicate(vec);
  print_vector(vec);

}